knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse")
#jackson's stuff
library(tidyr)
jeth_data <- read_csv("jethro_data.csv")
#jackson's stuff
library(tidyr)
library(dplyr)
library(readr)
jeth_data <- read_csv("jethro_data.csv")
filtered_games <- jeth_data %>% select(PLAYER_ID, gameDate, MIN, FGM, FGA, FG3M, FG3A, FTM, FTA, REB, AST, STL, BLK, TO, PTS)
calc_scores <- function(this_year, data){
player_id_list <- data %>% select(PLAYER_ID)
uPlayer_id_list <- unique(player_id_list)
transformed_uPlayer_id_list <- pivot_wider(uPlayer_id_list, names_from = PLAYER_ID, values_from = PLAYER_ID)
#create a new tibble and in a for loop, add player ID and their average in important categories to a row in the tibble
player_averages <- tibble(
PLAYER_ID = numeric(0),
A_FGM = numeric(0),
A_FG3M = numeric(0),
A_FTM = numeric(0),
A_REB = numeric(0),
A_AST = numeric(0),
A_STL = numeric(0),
A_BLK = numeric(0),
A_PTS = numeric(0)
)
#this gives average values for each category from 2003 games and stores them in a tibble.
means <- games_from_2003 %>%
summarise(
meanfgm = mean(FGM, na.rm = T),
meanfg3m = mean(FG3M, na.rm = T),
meanftm = mean(FTM, na.rm = T),
meanreb = mean(REB, na.rm = T),
meanast = mean(AST, na.rm = T),
meanstl = mean(STL, na.rm = T),
meanblk = mean(BLK, na.rm = T),
meanpts = mean(PTS, na.rm = T)
)
player_scores <- tibble(player_id = integer(), player_score = numeric(), year = numeric())
#will need to turn this into a function at some point, will make doing this for each year really easy
for (pnum in transformed_uPlayer_id_list){
this_player_games <- filter(games_from_2003, PLAYER_ID == pnum)
avg_fgm <- mean(this_player_games$FGM, na.rm = T)
avg_fg3m <- mean(this_player_games$FG3M, na.rm = T)
avg_ftm <- mean(this_player_games$FTM, na.rm = T)
avg_reb <- mean(this_player_games$REB, na.rm = T)
avg_ast <- mean(this_player_games$AST, na.rm = T)
avg_stl <- mean(this_player_games$STL, na.rm = T)
avg_blk <- mean(this_player_games$BLK, na.rm = T)
avg_pts <- mean(this_player_games$PTS, na.rm = T)
player_averages <- player_averages %>%
add_row(
PLAYER_ID = pnum,
A_FGM = avg_fgm,
A_FG3M = avg_fg3m,
A_FTM = avg_ftm,
A_REB = avg_reb,
A_AST = avg_ast,
A_STL = avg_stl,
A_BLK = avg_blk,
A_PTS = avg_pts)
#at this point we have a tibble "player_averages" that has average value in each column for each player in 2003.We now want to find "player rating" which will be calculated by percent better or worse than average in each category.
#leave out score for PTS because it is reflected in the other 3 columns, FGM, FG3M, FTM
#weights can be adjusted if we want to make some things more valuable
FGscore <- 10 * (avg_fgm / means$meanfgm - 1)
FG3score <- 10 * (avg_fg3m / means$meanfg3m - 1)
FTscore <- 10 * (avg_ftm / means$meanftm - 1)
REBscore <- 10 * (avg_reb / means$meanreb - 1)
ASTscore <- 10 * (avg_ast / means$meanast - 1)
STLscore <- 10 * (avg_stl / means$meanstl - 1)
BLKscore <- 10 * (avg_blk / means$meanblk - 1)
scores <- c(FGscore, FG3score, FTscore, REBscore, ASTscore, STLscore, BLKscore)
scores <- coalesce(scores, 0)
total_score <- sum(scores)
#add player ID and their total score to player_scores tibble
player_scores <- player_scores %>%
add_row(
player_id = pnum,
player_score = total_score,
year = this_year)
}
#group and bin players into 6 equal size groups, 1 being lowest scores and 6 being highest.
group_size <- ceiling(nrow(player_scores) / 6)
player_scores <- player_scores %>%
#mutate(player_rank = cut(player_score, breaks = quantile(player_score, probs = seq(0,1,length.out = 6)), labels = FALSE))
mutate(player_rank = ntile(player_score, 6))
return(player_scores)
}
#run a for loop to loop through each year in the dataset and add player scores for each year
games_from_2003 <- filter(filtered_games, (gameDate > '2003-07-01' & gameDate < '2004-06-30') & MIN > 0:01)
games_from_2004 <- filter(filtered_games, (gameDate > '2004-07-01' & gameDate < '2005-06-30') & MIN > 0:01)
games_from_2005 <- filter(filtered_games, (gameDate > '2005-07-01' & gameDate < '2006-06-30') & MIN > 0:01)
games_from_2006 <- filter(filtered_games, (gameDate > '2006-07-01' & gameDate < '2007-06-30') & MIN > 0:01)
games_from_2007 <- filter(filtered_games, (gameDate > '2007-07-01' & gameDate < '2008-06-30') & MIN > 0:01)
games_from_2008 <- filter(filtered_games, (gameDate > '2008-07-01' & gameDate < '2009-06-30') & MIN > 0:01)
games_from_2009 <- filter(filtered_games, (gameDate > '2009-07-01' & gameDate < '2010-06-30') & MIN > 0:01)
games_from_2010 <- filter(filtered_games, (gameDate > '2010-07-01' & gameDate < '2011-06-30') & MIN > 0:01)
games_from_2011 <- filter(filtered_games, (gameDate > '2011-07-01' & gameDate < '2012-06-30') & MIN > 0:01)
games_from_2012 <- filter(filtered_games, (gameDate > '2012-07-01' & gameDate < '2013-06-30') & MIN > 0:01)
games_from_2013 <- filter(filtered_games, (gameDate > '2013-07-01' & gameDate < '2014-06-30') & MIN > 0:01)
games_from_2014 <- filter(filtered_games, (gameDate > '2014-07-01' & gameDate < '2015-06-30') & MIN > 0:01)
games_from_2015 <- filter(filtered_games, (gameDate > '2015-07-01' & gameDate < '2016-06-30') & MIN > 0:01)
games_from_2016 <- filter(filtered_games, (gameDate > '2016-07-01' & gameDate < '2017-06-30') & MIN > 0:01)
games_from_2017 <- filter(filtered_games, (gameDate > '2017-07-01' & gameDate < '2018-06-30') & MIN > 0:01)
games_from_2018 <- filter(filtered_games, (gameDate > '2018-07-01' & gameDate < '2019-06-30') & MIN > 0:01)
games_from_2019 <- filter(filtered_games, (gameDate > '2019-07-01' & gameDate < '2020-06-30') & MIN > 0:01)
games_from_2020 <- filter(filtered_games, (gameDate > '2020-07-01' & gameDate < '2021-06-30') & MIN > 0:01)
games_yearly_list <- list(games_from_2003,games_from_2004,games_from_2005,games_from_2006,games_from_2007,games_from_2008,games_from_2009,games_from_2010,games_from_2011,games_from_2012,games_from_2013,games_from_2014,games_from_2015,games_from_2016,games_from_2017,games_from_2018,games_from_2019,games_from_2020)
all_player_scores <- tibble(player_id = integer(), player_score = numeric(), year = numeric())
for(i in 1:length(games_yearly_list)){
year <- 2002+i
this_data <- games_yearly_list[[i]]
this_year_scores <- calc_scores(this_year = year, data = this_data)
all_player_scores <- bind_rows(all_player_scores, this_year_scores)
}
hist(x=all_player_scores$player_rank)
summary(all_player_scores)
write_csv(all_player_scores, "player_scores.csv")
#need to isolate win % and how many of each type of player each team has for a certain year
all_games <- read_csv("games.csv")
start <- 2003
for(i in range(2003:2021)){
print(i)
}
for(i in 2003:2021){
print(i)
}
teams <- all_games %>% unique(TEAM_ID_home)
teams <- unique(all_games, TEAM_ID_home)
?unique
teams <- unique(all_games$TEAM_ID_home)
teams
count(teams)
teams
all_games <- read_csv("games.csv")
unique_teams <- unique(all_games$TEAM_ID_home)
team_winrates_by_season <- tibble(team_id = integer(), num_wins = integer(), win_pct = numeric(), season = integer())
for(i in 2003:2020){
this_year_games <- filter(all_games, SEASON == i)
for(j in unique_teams){
this_team_games <- filter(this_year_games, TEAM_ID_home == j)
wins <- length(which(this_team_games$HOME_TEAM_WINS == 1))
games <- length(which(this_team_games$HOME_TEAM_WINS == 1 | this_team_games$HOME_TEAM_WINS == 0))
pct <- wins / games
team_winrates_by_season %>% add_row(team_id = j, num_wins = wins, win_pct = pct)
}
}
View(team_winrates_by_season)
for(i in 2003:2020){
this_year_games <- filter(all_games, SEASON == i)
for(j in unique_teams){
print(j)
this_team_games <- filter(this_year_games, TEAM_ID_home == j)
wins <- length(which(this_team_games$HOME_TEAM_WINS == 1))
games <- length(which(this_team_games$HOME_TEAM_WINS == 1 | this_team_games$HOME_TEAM_WINS == 0))
pct <- wins / games
team_winrates_by_season %>% add_row(team_id = j, num_wins = wins, win_pct = pct)
}
}
all_games <- read_csv("games.csv")
unique_teams <- unique(all_games$TEAM_ID_home)
team_winrates_by_season <- tibble(team_id = integer(), num_wins = integer(), win_pct = numeric(), season = integer())
for(i in 2003:2020){
this_year_games <- filter(all_games, SEASON == i)
for(j in unique_teams){
this_team_games <- filter(this_year_games, TEAM_ID_home == j)
wins <- length(which(this_team_games$HOME_TEAM_WINS == 1))
games <- length(which(this_team_games$HOME_TEAM_WINS == 1 | this_team_games$HOME_TEAM_WINS == 0))
pct <- wins / games
team_winrates_by_season %>% add_row(team_id = j, num_wins = wins, win_pct = pct)
}
}
View(this_team_games)
for(i in 2003:2020){
this_year_games <- filter(all_games, SEASON == i)
for(j in unique_teams){
this_team_games <- filter(this_year_games, TEAM_ID_home == j)
wins <- sum(this_team_games$HOME_TEAM_WINS == 1)
games <- sum(this_team_games$HOME_TEAM_WINS == 1 | this_team_games$HOME_TEAM_WINS == 0)
pct <- wins / games
team_winrates_by_season %>% add_row(team_id = j, num_wins = wins, win_pct = pct)
}
}
games <- sum(this_team_games$HOME_TEAM_WINS == 1 | this_team_games$HOME_TEAM_WINS == 0)
for(i in 2003:2020){
this_year_games <- filter(all_games, SEASON == i)
for(j in unique_teams){
this_team_games <- filter(this_year_games, TEAM_ID_home == j)
wins <- sum(this_team_games$HOME_TEAM_WINS == 1)
games <- sum(this_team_games$HOME_TEAM_WINS == 1 | this_team_games$HOME_TEAM_WINS == 0)
pct <- wins / games
print(wins)
print(games)
team_winrates_by_season %>% add_row(team_id = j, num_wins = wins, win_pct = pct)
}
}
